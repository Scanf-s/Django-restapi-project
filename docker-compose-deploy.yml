version: "3.11"
services:
  app: # Django application
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - static-data:/vol/web
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
    depends_on: # DB가 먼저 준비가 되어야 함
      - db

  db: # PostgreSQL Database
    image: postgres:16.3-alpine3.20
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

  proxy:
    build:
      context: ./proxy
    restart: always
    depends_on:
      - app
    # ports:
      # - 80:8000 # ec2-어쩌구저쩌구.com/api/v1 (from:to) AWS 사용 시 80 port를 열어주게 되므로
      # - 8000:8000 # 로컬 테스트 시
    volumes:
      - static-data:/vol/static

volumes:
  postgres-data:
  static-data:
